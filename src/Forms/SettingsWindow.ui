<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>SettingsWindow</class>
 <widget class="QWidget" name="SettingsWindow">
  <property name="windowModality">
   <enum>Qt::ApplicationModal</enum>
  </property>
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>545</width>
    <height>430</height>
   </rect>
  </property>
  <property name="minimumSize">
   <size>
    <width>545</width>
    <height>430</height>
   </size>
  </property>
  <property name="maximumSize">
   <size>
    <width>545</width>
    <height>430</height>
   </size>
  </property>
  <property name="contextMenuPolicy">
   <enum>Qt::NoContextMenu</enum>
  </property>
  <property name="windowTitle">
   <string>Settings</string>
  </property>
  <property name="windowIcon">
   <iconset resource="../../res/Res.qrc">
    <normaloff>:/images/images/application-icon.png</normaloff>:/images/images/application-icon.png</iconset>
  </property>
  <property name="styleSheet">
   <string notr="true">QWidget {
	background-color: rgb(230, 230, 230);
}
</string>
  </property>
  <widget class="QFrame" name="frame1">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>370</y>
     <width>525</width>
     <height>50</height>
    </rect>
   </property>
   <property name="contextMenuPolicy">
    <enum>Qt::NoContextMenu</enum>
   </property>
   <property name="styleSheet">
    <string notr="true">QFrame {
	background-color: rgb(190, 190, 190);
	
	border: 1px solid  rgb(100, 100, 100);
	border-radius: 2px;
}
</string>
   </property>
   <property name="frameShape">
    <enum>QFrame::StyledPanel</enum>
   </property>
   <property name="frameShadow">
    <enum>QFrame::Raised</enum>
   </property>
   <widget class="QPushButton" name="cancelButton">
    <property name="enabled">
     <bool>true</bool>
    </property>
    <property name="geometry">
     <rect>
      <x>435</x>
      <y>10</y>
      <width>80</width>
      <height>30</height>
     </rect>
    </property>
    <property name="contextMenuPolicy">
     <enum>Qt::NoContextMenu</enum>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
	font: 75 12pt &quot;Liberation Sans&quot;;
	color: rgb(255, 255, 255);

	background-color: rgb(150, 0, 0);

	border: 1px solid  rgb(50, 0, 0);
	border-radius: 2px;
}

QPushButton:hover {
	background-color: rgb(180, 0, 0);
}

QPushButton:disabled {
	background-color: rgb(150, 100, 100);
}
</string>
    </property>
    <property name="text">
     <string>CANCEL</string>
    </property>
   </widget>
   <widget class="QPushButton" name="saveButton">
    <property name="enabled">
     <bool>true</bool>
    </property>
    <property name="geometry">
     <rect>
      <x>10</x>
      <y>10</y>
      <width>80</width>
      <height>30</height>
     </rect>
    </property>
    <property name="contextMenuPolicy">
     <enum>Qt::NoContextMenu</enum>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
	font: 75 12pt &quot;Liberation Sans&quot;;
	color: rgb(255, 255, 255);

	background-color: rgb(0, 150, 0);

	border: 1px solid  rgb(0, 50, 0);
	border-radius: 2px;
}

QPushButton:hover {
	background-color: rgb(0, 180, 0);
}

QPushButton:disabled {
	background-color: rgb(100, 150, 100);
}
</string>
    </property>
    <property name="text">
     <string>SAVE</string>
    </property>
   </widget>
  </widget>
  <widget class="QTabWidget" name="tabWidget">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>10</y>
     <width>525</width>
     <height>350</height>
    </rect>
   </property>
   <property name="sizePolicy">
    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
     <horstretch>0</horstretch>
     <verstretch>0</verstretch>
    </sizepolicy>
   </property>
   <property name="minimumSize">
    <size>
     <width>525</width>
     <height>350</height>
    </size>
   </property>
   <property name="maximumSize">
    <size>
     <width>325</width>
     <height>350</height>
    </size>
   </property>
   <property name="styleSheet">
    <string notr="true">QTabWidget {
	background-color: rgb(190, 190, 190);
	border: 1px solid  rgb(100, 100, 100);
	border-radius: 2px;
}

QTabWidget::pane {
    border: 1px solid black;
}

QTabBar:tab {
	width: 174px;
	height: 30px;

	font: 75 12pt &quot;Liberation Sans&quot;;
	color: rgb(255, 255, 255);
	
	background-color: rgb(150, 150, 150);
	
	border-top: 1px solid  rgb(100, 100, 100);
	border-right: 1px solid  rgb(100, 100, 100);
	border-bottom: 1px solid  rgb(100, 100, 100);
}

QTabBar:tab:selected {
    background-color: rgb(130, 130, 130);
}
</string>
   </property>
   <property name="currentIndex">
    <number>0</number>
   </property>
   <widget class="QWidget" name="languageTab">
    <property name="styleSheet">
     <string notr="true">QWidget {
	background-color: rgb(190, 190, 190);
}</string>
    </property>
    <attribute name="title">
     <string>Languages</string>
    </attribute>
    <widget class="QPushButton" name="addButton">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>10</y>
       <width>80</width>
       <height>30</height>
      </rect>
     </property>
     <property name="contextMenuPolicy">
      <enum>Qt::NoContextMenu</enum>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
	font: 75 12pt &quot;Liberation Sans&quot;;
	color: rgb(255, 255, 255);

	background-color: rgb(150, 150, 150);

	border: 1px solid  rgb(100, 100, 100);
	border-radius: 2px;
}

QPushButton:hover {
	background-color: rgb(160, 160, 160);
}

QPushButton:disabled {
	background-color: rgb(190, 190, 190);
}
</string>
     </property>
     <property name="text">
      <string>ADD</string>
     </property>
    </widget>
    <widget class="QPushButton" name="deleteButton">
     <property name="geometry">
      <rect>
       <x>435</x>
       <y>10</y>
       <width>80</width>
       <height>30</height>
      </rect>
     </property>
     <property name="contextMenuPolicy">
      <enum>Qt::NoContextMenu</enum>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
	font: 75 12pt &quot;Liberation Sans&quot;;
	color: rgb(255, 255, 255);

	background-color: rgb(150, 150, 150);

	border: 1px solid  rgb(100, 100, 100);
	border-radius: 2px;
}

QPushButton:hover {
	background-color: rgb(160, 160, 160);
}

QPushButton:disabled {
	background-color: rgb(190, 190, 190);
}
</string>
     </property>
     <property name="text">
      <string>DELETE</string>
     </property>
    </widget>
    <widget class="QScrollArea" name="scrollArea">
     <property name="geometry">
      <rect>
       <x>0</x>
       <y>50</y>
       <width>523</width>
       <height>265</height>
      </rect>
     </property>
     <property name="sizePolicy">
      <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="minimumSize">
      <size>
       <width>523</width>
       <height>265</height>
      </size>
     </property>
     <property name="maximumSize">
      <size>
       <width>523</width>
       <height>265</height>
      </size>
     </property>
     <property name="styleSheet">
      <string notr="true">QScrollArea {
	border-top: 1px solid  rgb(100, 100, 100);
}
</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::NoFrame</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Plain</enum>
     </property>
     <property name="verticalScrollBarPolicy">
      <enum>Qt::ScrollBarAlwaysOff</enum>
     </property>
     <property name="horizontalScrollBarPolicy">
      <enum>Qt::ScrollBarAlwaysOff</enum>
     </property>
     <property name="sizeAdjustPolicy">
      <enum>QAbstractScrollArea::AdjustIgnored</enum>
     </property>
     <property name="widgetResizable">
      <bool>true</bool>
     </property>
     <property name="alignment">
      <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>
     </property>
     <widget class="QWidget" name="scrollAreaContents">
      <property name="geometry">
       <rect>
        <x>0</x>
        <y>0</y>
        <width>521</width>
        <height>263</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true"/>
      </property>
      <layout class="QFormLayout" name="formLayout">
       <property name="sizeConstraint">
        <enum>QLayout::SetDefaultConstraint</enum>
       </property>
       <property name="fieldGrowthPolicy">
        <enum>QFormLayout::AllNonFixedFieldsGrow</enum>
       </property>
       <property name="rowWrapPolicy">
        <enum>QFormLayout::WrapAllRows</enum>
       </property>
       <property name="formAlignment">
        <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>
       </property>
       <property name="horizontalSpacing">
        <number>0</number>
       </property>
       <property name="verticalSpacing">
        <number>0</number>
       </property>
       <property name="leftMargin">
        <number>0</number>
       </property>
       <property name="topMargin">
        <number>0</number>
       </property>
       <property name="rightMargin">
        <number>0</number>
       </property>
       <property name="bottomMargin">
        <number>0</number>
       </property>
      </layout>
     </widget>
    </widget>
   </widget>
   <widget class="QWidget" name="otherTab">
    <property name="styleSheet">
     <string notr="true">QWidget {
	background-color: rgb(190, 190, 190);
}</string>
    </property>
    <attribute name="title">
     <string>Other settings</string>
    </attribute>
    <widget class="QFrame" name="frame3">
     <property name="geometry">
      <rect>
       <x>0</x>
       <y>50</y>
       <width>523</width>
       <height>50</height>
      </rect>
     </property>
     <property name="contextMenuPolicy">
      <enum>Qt::NoContextMenu</enum>
     </property>
     <property name="styleSheet">
      <string notr="true">QFrame {
	background-color: rgb(190, 190, 190);
	
	border-bottom: 1px solid  rgb(100, 100, 100);
}
</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::StyledPanel</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <widget class="QLabel" name="compressingLabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>140</width>
        <height>30</height>
       </rect>
      </property>
      <property name="contextMenuPolicy">
       <enum>Qt::NoContextMenu</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
	font: 75 11pt &quot;Liberation Sans&quot;;
	color: rgb(20, 20, 20);

	border: 1px solid  rgb(100, 100, 100);
	border-radius: 2px;
}
</string>
      </property>
      <property name="text">
       <string>Compressing level:</string>
      </property>
     </widget>
     <widget class="CustomComboBox" name="compressingBox">
      <property name="enabled">
       <bool>true</bool>
      </property>
      <property name="geometry">
       <rect>
        <x>160</x>
        <y>10</y>
        <width>80</width>
        <height>30</height>
       </rect>
      </property>
      <property name="contextMenuPolicy">
       <enum>Qt::NoContextMenu</enum>
      </property>
      <property name="autoFillBackground">
       <bool>false</bool>
      </property>
      <property name="styleSheet">
       <string notr="true">QComboBox {
	font: 75 12pt &quot;Liberation Sans&quot;;
	color: rgb(255, 255, 255);

	background-color: rgb(150, 150, 150);

	border: 1px solid  rgb(100, 100, 100);
	border-radius: 2px;
}

QComboBox:hover {
	background-color: rgb(160, 160, 160);
}

QComboBox:disabled {
	background-color: rgb(190, 190, 190);
}
</string>
      </property>
      <property name="currentText">
       <string>        1</string>
      </property>
      <property name="maxCount">
       <number>100</number>
      </property>
      <property name="frame">
       <bool>true</bool>
      </property>
      <item>
       <property name="text">
        <string>        1</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>        2</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>        3</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>        4</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>        5</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>        6</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>        7</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>        8</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>        9</string>
       </property>
      </item>
     </widget>
    </widget>
    <widget class="QFrame" name="frame2">
     <property name="geometry">
      <rect>
       <x>0</x>
       <y>0</y>
       <width>523</width>
       <height>50</height>
      </rect>
     </property>
     <property name="contextMenuPolicy">
      <enum>Qt::NoContextMenu</enum>
     </property>
     <property name="styleSheet">
      <string notr="true">QFrame {
	background-color: rgb(190, 190, 190);
	
	border-bottom: 1px solid  rgb(100, 100, 100);
}
</string>
     </property>
     <property name="frameShape">
      <enum>QFrame::StyledPanel</enum>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Raised</enum>
     </property>
     <widget class="QLabel" name="dataPathLabel">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>140</width>
        <height>30</height>
       </rect>
      </property>
      <property name="contextMenuPolicy">
       <enum>Qt::NoContextMenu</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
	font: 75 11pt &quot;Liberation Sans&quot;;
	color: rgb(20, 20, 20);

	border: 1px solid  rgb(100, 100, 100);
	border-radius: 2px;
}
</string>
      </property>
      <property name="text">
       <string>Default data path:</string>
      </property>
      <property name="textFormat">
       <enum>Qt::PlainText</enum>
      </property>
     </widget>
     <widget class="QLineEdit" name="dataPathEdit">
      <property name="geometry">
       <rect>
        <x>160</x>
        <y>10</y>
        <width>263</width>
        <height>30</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Liberation Mono</family>
        <pointsize>10</pointsize>
        <weight>50</weight>
        <italic>false</italic>
        <bold>false</bold>
       </font>
      </property>
      <property name="focusPolicy">
       <enum>Qt::ClickFocus</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit {
	font: 10pt &quot;Liberation Mono&quot;;
	color: rgb(20, 20, 20);

	background-color: rgb(255, 255, 255);

	border: 1px solid  rgb(100, 100, 100);
	border-radius: 2px;
}
</string>
      </property>
      <property name="text">
       <string>data</string>
      </property>
      <property name="readOnly">
       <bool>false</bool>
      </property>
      <property name="clearButtonEnabled">
       <bool>true</bool>
      </property>
     </widget>
     <widget class="QPushButton" name="dataPathButton">
      <property name="geometry">
       <rect>
        <x>433</x>
        <y>10</y>
        <width>80</width>
        <height>30</height>
       </rect>
      </property>
      <property name="sizePolicy">
       <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
        <horstretch>0</horstretch>
        <verstretch>0</verstretch>
       </sizepolicy>
      </property>
      <property name="minimumSize">
       <size>
        <width>80</width>
        <height>30</height>
       </size>
      </property>
      <property name="maximumSize">
       <size>
        <width>80</width>
        <height>30</height>
       </size>
      </property>
      <property name="contextMenuPolicy">
       <enum>Qt::NoContextMenu</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
	font: 75 12pt &quot;Liberation Sans&quot;;
	color: rgb(255, 255, 255);

	background-color: rgb(150, 150, 150);

	border: 1px solid  rgb(100, 100, 100);
	border-radius: 2px;
}

QPushButton:hover {
	background-color: rgb(160, 160, 160);
}

QPushButton:disabled {
	background-color: rgb(190, 190, 190);
}
</string>
      </property>
      <property name="text">
       <string>...</string>
      </property>
     </widget>
    </widget>
   </widget>
   <widget class="QWidget" name="aboutTab">
    <property name="styleSheet">
     <string notr="true">QWidget {
	background-color: rgb(190, 190, 190);
}</string>
    </property>
    <attribute name="title">
     <string>About</string>
    </attribute>
    <widget class="QPlainTextEdit" name="aboutEdit">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>10</y>
       <width>503</width>
       <height>295</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPlainTextEdit {
	font: 75 11pt &quot;Liberation Sans&quot;;
	color: rgb(20, 20, 20);

	
	background-color: rgb(255, 255, 255);

	border: 1px solid  rgb(20, 20, 20);
	border-radius: 2px;
}
</string>
     </property>
     <property name="frameShadow">
      <enum>QFrame::Plain</enum>
     </property>
     <property name="verticalScrollBarPolicy">
      <enum>Qt::ScrollBarAlwaysOff</enum>
     </property>
     <property name="horizontalScrollBarPolicy">
      <enum>Qt::ScrollBarAlwaysOff</enum>
     </property>
     <property name="readOnly">
      <bool>true</bool>
     </property>
     <property name="plainText">
      <string>This software distributed under the LGPL-3.0 license.
Developed using Qt framework.

Created by PSV:  https://github.com/psv-git

Thanks for: AMGarkin, buzarini</string>
     </property>
     <property name="textInteractionFlags">
      <set>Qt::LinksAccessibleByKeyboard|Qt::LinksAccessibleByMouse|Qt::TextBrowserInteraction|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>
     </property>
     <property name="backgroundVisible">
      <bool>false</bool>
     </property>
    </widget>
   </widget>
  </widget>
 </widget>
 <customwidgets>
  <customwidget>
   <class>CustomComboBox</class>
   <extends>QComboBox</extends>
   <header>CustomComboBox.hpp</header>
  </customwidget>
 </customwidgets>
 <tabstops>
  <tabstop>compressingBox</tabstop>
  <tabstop>saveButton</tabstop>
  <tabstop>cancelButton</tabstop>
 </tabstops>
 <resources>
  <include location="../../res/Res.qrc"/>
 </resources>
 <connections/>
</ui>
